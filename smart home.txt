int dimmingIn=A0, smokeIn=22;
int dimmingOut=2,smokeOut=23 ;

bool smoke ; 
int pot = 0 ; 
void setup() {
  pinMode(smokeOut, OUTPUT);
  pinMode(dimmingOut,OUTPUT); 
  
}

void loop() {
 dimming();
 smoke = digitalRead(smokeIn); 
  if(smoke==1) digitalWrite(smokeOut, LOW);   // active low sensor , no smoke = 1 
  
  else digitalWrite(9, HIGH);   
  
} 





void dimming() {
  pot = analogRead(dimmingIn);
  analogWrite(dimmingOut,pot*255.0/1023); 
}
#include <Keypad.h> // the library for the 4x4 keypad
#include <LiquidCrystal_I2C.h> // the library for the i2c 1602 lcd
#include <Servo.h> // the library to control the servo motor
LiquidCrystal_I2C lcd(0x3F,20,4); // gets the lcd
Servo servo;
#define Password_Length 5 // the length of the password, if the password is 4 digits long set this to 5
int Position = 0; // position of the servo
char Particular[Password_Length]; // the password length
char Specific[Password_Length] = "1234"; // the password which is called specific in the code, change this to anything you want with the numbers 0-9 and the letters A-D
byte Particular_Count = 0, Specific_Count = 0; // counts the amount of digits and and checks to see if the password is correct
char Key;
const byte RO…
#include <Servo.h>
Servo servo;
int angle = 10;

void setup() {
  servo.attach(8);
  servo.write(angle);
}


void loop() 
{ 
 // scan from 0 to 180 degrees
  for(angle = 10; angle < 180; angle++)  
  {                                  
    servo.write(angle);               
    delay(15);                   
  } 
  // now scan back from 180 to 0 degrees
  for(angle = 180; angle > 10; angle--)    
  {                                
    servo.write(angle);           
    delay(15);       
  } 
}
int Incoming_value = 0;
float T = 0;
long unsigned int t_old=0;
                
void setup() 
{
  Serial.begin(9600);         
  pinMode(13, OUTPUT);   
  pinMode(9, OUTPUT);    
}

void loop()
{
  T =  analogRead(A0)*100.0/1023 ;
  if(Serial.available() > 0)  
  {
    Incoming_value = Serial.read(); 
    //Serial.println(Incoming_value);                  
    if(Incoming_value == 201)             
      digitalWrite(13, HIGH);  
    else if(Incoming_value == 200)       
      digitalWrite(13, LOW);  

    if(Incoming_value>=0 && Incoming_value<=100)             
      analogWrite(9, Incoming_value*255.0/100);  
    
        
  }
  if(millis()/1000-t_old >=2){
  t_old = millis()/1000 ; 
  Serial.print((int)T); 
  }                         
}
int ldr ; 
int dimming_pot ; 
int temp ; 

int out_lighting = 40 ; 
int shutter_close = 38 ; 
int shutter_open = 39 ; 
int dimming_led = 3 ;
int fan = 4 ;

bool limit_close ; 
bool limit_open ; 


void setup() {

pinMode(out_lighting,OUTPUT);
pinMode(shutter_close,OUTPUT);
pinMode(shutter_open,OUTPUT);
pinMode(52,OUTPUT);
pinMode(53,OUTPUT);
pinMode(dimming_led,OUTPUT);
pinMode(fan,OUTPUT);

}


void loop() {
limit_open = digitalRead(53);
limit_close = digitalRead(52);
ldr = analogRead(A7) ; 
dimming_pot = analogRead(A6) ; 
temp = analogRead(A5)* 500.0/1023 ; 


if(temp<20) analogWrite(fan,0) ; 
else if(temp>30)  analogWrite(fan,255) ;
else analogWrite(fan,127) ;


analogWrite(dimming_led, dimming_pot*255.0/1023 ) ; 

if (ldr >= 600 ) {   //day
     digitalW…
int dimmingIn=A0;
int dimmingOut=2;
int mq_A0  = A9;
int buzzer = 30;
int threshold = 300;
int var; 
int pot = 0 ; 
const int trackingPin = A10; //the tracking module attach to pin 29
const int ledPin = 28; //pin28 built-in led
void setup() {
  pinMode(dimmingOut,OUTPUT); 
   Serial.begin(9600);
   pinMode( mq_A0, INPUT );
pinMode( buzzer, OUTPUT );
digitalWrite( buzzer,LOW );
pinMode(trackingPin, INPUT); // set trackingPin as INPUT
  pinMode(ledPin, OUTPUT); //set ledPin as OUTPUT
}

void loop() {
 dimming();
 var = analogRead( mq_A0 );
Serial.print(" Gas Level= ");
Serial.println( var );

if( var > threshold )
{

digitalWrite( buzzer, HIGH );
Serial.println(" Gas Is Detected! ");

}

else
{
digitalWrite( buzzer, LOW );
Serial.println(" Normal Condition ");…
int ldr ; 

void setup() {
  //Serial.begin(9600);
  pinMode(11,OUTPUT);
}

void loop() {
ldr = analogRead(A7) ; 
//Serial.println(ldr);
//delay(1000);

if (ldr >= 600 )   // day
     digitalWrite(11,LOW);

  else 
     digitalWrite(11,HIGH);
}
#include <LiquidCrystal.h>            
#include <Keypad.h> 
#include <Servo.h>

Servo door_pin;  // create servo object to control a servo
// twelve servo objects can be created on most boards

int pos = 0;    // variable to store the servo position

const int rs = A2, en = A3, d4 = A4, d5 = A5, d6 = A6, d7 = A7;   //pins connected to LCD 
LiquidCrystal lcd(rs, en, d4, d5, d6, d7);

const byte ROWS = 4; //four rows
const byte COLS = 3; //three columns
char keys[ROWS][COLS] = {
  {'1','2','3'},
  {'4','5','6'},
  {'7','8','9'},
  {'*','0','#'}
};
byte rowPins[ROWS] = {53,52,51,50}; //connect to the row pinouts of the keypad
byte colPins[COLS] = {49,48,47}; //connect to the column pinouts of the keypad

Keypad keypad = Keypad( makeKeymap(keys), rowPins, colPin…
#include <LiquidCrystal.h>            
#include <Keypad.h> 
#include <Servo.h>

Servo door_pin;  // create servo object to control a servo
// twelve servo objects can be created on most boards
long int seconds ; 
bool pir ; 
// the setup function runs once when you press reset or power the board
int pos = 0;    // variable to store the servo position

const int rs = A2, en = A3, d4 = A4, d5 = A5, d6 = A6, d7 = A7;   //pins connected to LCD 
LiquidCrystal lcd(rs, en, d4, d5, d6, d7);

const byte ROWS = 4; //four rows
const byte COLS = 3; //three columns
char keys[ROWS][COLS] = {
  {'1','2','3'},
  {'4','5','6'},
  {'7','8','9'},
  {'*','0','#'}
};
byte rowPins[ROWS] = {53,52,51,50}; //connect to the row pinouts of the keypad
byte colPins[COLS] = {49,48,47}; /…
int val = analogRead(trackingPin); // read the value of tracking module
  if(val <= 100)
 {
 digitalWrite (ledPin, HIGH ); //led off
 delay(1000);
 
 }
 else{
 digitalWrite (ledPin, LOW); //led on - default
}
}
#include <SimpleDHT.h>
#include <Wire.h> 
#include <LiquidCrystal_I2C.h>

// for DHT11, 
//      VCC: 5V or 3V
//      GND: GND
//      DATA: 2
int pinDHT11 = 2;
SimpleDHT11 dht11(pinDHT11);
//LiquidCrystal_I2C lcd(0x27, 16, 2);

void setup() {
  Serial.begin(115200);
}

void loop() {
  // start working...
  Serial.println("=================================");
  Serial.println("Sample DHT11...");
  
  // read without samples.
  byte temperature = 0;
  byte humidity = 0;
  int err = SimpleDHTErrSuccess;
  if ((err = dht11.read(&temperature, &humidity, NULL)) != SimpleDHTErrSuccess) {
    Serial.print("Read DHT11 failed, err="); Serial.println(err);delay(1000);
    return;
  }
  

    lcd.begin();

  // Turn on the blacklight and print a message.
  lcd.backlig…
#include <LiquidCrystal.h>

#include <Servo.h>

#include <SoftwareSerial.h>
SoftwareSerial myserial(0,1); //Tx1,Rx1
#include <LiquidCrystal.h>            
#include <Keypad.h> 
#include <Servo.h>

Servo door_pin;  // create servo object to control a servo
// twelve servo objects can be created on most boards
// defines pins numbers
const int trigPin = 9; //ultrasonic
const int echoPin = 10; //ultrasonic
// defines variables
long duration;
int distance;
int pos = 0;    // variable to store the servo position
long int seconds ; 
bool pir ; 
int shutter_speed_pin = 12 ;
int shutter_close = 38 ; 
int shutter_open = 39 ; 
bool f1 = 1 ;
bool f2 = 1 ;
const int rs = A2, en = A3, d4 = A4, d5 = A5, d6 = A6, d7 = A7;   //pins connected to LCD 
LiquidCrystal lcd(rs, en,…
#include <LiquidCrystal.h>

#include <Servo.h>

#include <SoftwareSerial.h>
SoftwareSerial myserial(0,1); //Tx1,Rx1
#include <LiquidCrystal.h>            
#include <Keypad.h> 
#include <Servo.h>

Servo door_pin;  // create servo object to control a servo
// twelve servo objects can be created on most boards
// defines pins numbers
int smokeA0 = A13;
int buzzer = 13;
int sensorThres = 100;
const int trigPin = 9; //ultrasonic
const int echoPin = 10; //ultrasonic
// defines variables
long duration;
int distance;
int pos = 0;    // variable to store the servo position
long int seconds ; 
bool pir ; 
int shutter_speed_pin = 12 ;
int shutter_close = 38 ; 
int shutter_open = 39 ; 
bool f1 = 1 ;
bool f2 = 1 ;
const int rs = A2, en = A3, d4 = A4, d5 = A5, d6 = A6, d7…
int ldr ; 

int out_lighting = 31 ; 

int shutter_speed_pin = 12 ;
int shutter_close = 38 ; 
int shutter_open = 39 ; 
bool f1 = 1 ;
bool f2 = 1 ;


bool limit_close ; 
bool limit_open ; 


void setup() {

pinMode(out_lighting,OUTPUT);
pinMode(shutter_close,OUTPUT);
pinMode(shutter_open,OUTPUT);
pinMode(shutter_speed_pin,OUTPUT);

Serial.begin(9600);

}


void loop() {
Serial.println(ldr);
ldr = analogRead(A8) ; 
 





if (ldr >= 500 && f1==1 ) {   //day

     f2 = 1 ;
     f1 = 0 ;
     
     digitalWrite(out_lighting,LOW);

     analogWrite(shutter_speed_pin,150);
     digitalWrite(shutter_close,HIGH);
     digitalWrite(shutter_open,LOW);

     
      delay(1000);
      analogWrite(shutter_speed_pin,0);
      digitalWrite(shutter_close,LOW);
      digitalW…